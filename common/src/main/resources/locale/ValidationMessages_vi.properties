javax.validation.constraints.AssertFalse.message     = phải là false
javax.validation.constraints.AssertTrue.message      = phải là true
javax.validation.constraints.DecimalMax.message      = phải nhỏ hơn ${inclusive == true ? 'hoặc bằng ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = phải lớn hơn ${inclusive == true ? 'hoặc bằng ' : ''}{value}
javax.validation.constraints.Digits.message          = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Email.message           = phải đúng định dạng email
javax.validation.constraints.Future.message          = phải là thời điểm tương lai
javax.validation.constraints.FutureOrPresent.message = phải là hiện tại hoặc tương lai
javax.validation.constraints.Max.message             = phải nhỏ hơn hoặc bằng {value}
javax.validation.constraints.Min.message             = phải lớn hơn hoặc bằng {value}
javax.validation.constraints.Negative.message        = phải là số âm
javax.validation.constraints.NegativeOrZero.message  = phải nhỏ hơn hoặc bằng 0
javax.validation.constraints.NotBlank.message        = không được để trống
javax.validation.constraints.NotEmpty.message        = không được để trống
javax.validation.constraints.NotNull.message         = không được để trống
javax.validation.constraints.Null.message            = phải là null
javax.validation.constraints.Past.message            = phải là quá khứ
javax.validation.constraints.PastOrPresent.message   = phải là quá khứ hoặc hiện tại
javax.validation.constraints.Pattern.message         = phải khớp mẫu "{regexp}"
javax.validation.constraints.Positive.message        = phải là số dương
javax.validation.constraints.PositiveOrZero.message  = phải lớn hơn hoặc bằng 0
javax.validation.constraints.Size.message            = phải có cỡ trong khoảng {min} tới {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = số thẻ tín dụng không hợp lệ
org.hibernate.validator.constraints.Currency.message                = tiền tệ không hợp lệ (chấp nhập {value})
org.hibernate.validator.constraints.EAN.message                     = không phải {type} barcode
org.hibernate.validator.constraints.Email.message                   = không phải là email hợp lệ
org.hibernate.validator.constraints.ISBN.message                    = ISBN không hợp lệ
org.hibernate.validator.constraints.Length.message                  = phải có độ dài trong khoảng {min} tới {max}
org.hibernate.validator.constraints.CodePointLength.message         = phải có độ dài trong khoảng {min} tới {max}
org.hibernate.validator.constraints.LuhnCheck.message               = the check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = the check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = the check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = the check digit for ${validatedValue} is invalid, {modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = không được để trống
org.hibernate.validator.constraints.NotEmpty.message                = không được để trống
org.hibernate.validator.constraints.ParametersScriptAssert.message  = biểu thức script "{script}" không hợp lệ
org.hibernate.validator.constraints.Range.message                   = phải trong khoảng {min} tới {max}
org.hibernate.validator.constraints.SafeHtml.message                = có thể chứa nội dung html không an toàn
org.hibernate.validator.constraints.ScriptAssert.message            = biểu thức script "{script}" không hợp lệ
org.hibernate.validator.constraints.UniqueElements.message          = chỉ có thể chứa thuộc tính unique
org.hibernate.validator.constraints.URL.message                     = không phải url hợp lệ

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number

org.hibernate.validator.constraints.pl.REGON.message                = invalid Polish Taxpayer Identification Number (REGON)
org.hibernate.validator.constraints.pl.NIP.message                  = invalid VAT Identification Number (NIP)
org.hibernate.validator.constraints.pl.PESEL.message                = invalid Polish National Identification Number (PESEL)

org.hibernate.validator.constraints.time.DurationMax.message        = phải ngắn hơn ${inclusive == true ? 'hoặc bằng ' : ''} ${days == 0 ? '' : days == 1 ? ' 1 ngày' : ' ' += days += ' ngày'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
org.hibernate.validator.constraints.time.DurationMin.message        = must be longer than${inclusive == true ? ' or equal to' : ''}${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' minutes'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' seconds'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' millis'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}

vn.amit.common.constraint.ValueIn.message=ph\u1EA3i l\u00E0 m\u1ED9t trong c\u00E1c gi\u00E1 tr\u1ECB {anyOf}
vn.amit.common.constraint.ValueOfEnum.message=kh\u00F4ng ph\u1EA3i l\u00E0 m\u1ED9t gi\u00E1 tr\u1ECB {enumerates} h\u1EE3p l\u1EC7
vn.amit.common.constraint.Exists.message=kh\u00F4ng t\u1ED3n t\u1EA1i
vn.amit.common.constraint.NotNullWhen.message={fields} kh\u00F4ng \u0111\u01B0\u1EE3c b\u1ECF tr\u1ED1ng khi {validatedBy} {operator} {value}
vn.amit.common.constraint.NotNullIfField.message={fields} kh\u00F4ng \u0111\u01B0\u1EE3c b\u1ECF tr\u1ED1ng khi {validatedBy} {operator} {value}
vn.amit.common.constraint.Unique.message=đã bị sử dụng trước đó
